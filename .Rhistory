select(cran, time(-5:20))
x
skip()
-5:20
-(5:20)
info()
skip()
filter(cran, package == "swirl")
filter( cran, r_version == "3.1.1", country =="US")
?Comparison
filter( cran, r_version == "3.1.1", country =="IN")
filter( cran, r_version == "3.0.w", country =="IN")
filter( cran, r_version == "3.0.2", country =="IN")
filter( cran, r_version <= "3.0.2", country =="IN")
filter( cran, r_version <= "3.0.2", country =="US" | country =="IN")
filter( cran, country == "US" | country == "IN")
filter( cran, size > 100500, r_os == "linux-gnu"
)
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, r_version = !is.na())
x
filter(cran, !is.na(r_version))
arrange()
cran2 <- select(cran, ip_id:store)
x
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
desc(ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version),ip_id)
cran3 <- select( ip_id, package, size)
cran3 <- select(ip_id, package, size)
x
cran3 <- select(cran,ip_id, package, size)
cran3
mutata(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
94930
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
main()
main()
mydf <- read.csv(path2Csv, stringsAsFactors = FAlSE)
mydf <- read.csv(path2csv, stringsAsFactors = FAlSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
selet(cran, ip_id, package, country)
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
filter(cran, package == "swirl")
-(5:20)
filter(cran, package == "swirl")
select(cran, -(X:size))
filter(cran, package == "swirl")
filter( cran, r_version == "3.1.1", country =="IN")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter( cran, r_version <= "3.0.2", country =="IN")
filter( cran, country == "US" | country == "IN")
filter( cran, size > 100500, r_os == "linux-gnu"
)
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, r_version = !is.na())
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
desc(ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version),ip_id)
cran3 <- select( ip_id, package, size)
cran3 <- select(ip_id, package, size)
cran3 <- select(cran,ip_id, package, size)
mutate(cran3, size_mb = size / 2^20)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(swirl)
swirl()
x
xx
x<-2
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os = "linux-gny")
filter(cran, size > 100500, r_os = "linux-gnu")
x
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter( cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
desc(ip_id)
arrange(cran2, desc((ip_id))
)
arrange(cran2, desc(ip_id))
arrange( cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000
)
summarize(cran, avg_bytes - mean(size))
avg_bytes <- summarize(cran, avg_bytes - mean(size))
avg_bytes <- summarize(cran, avg_bytes = mean(size))
avg_bytes <- summarize(cran, avg_bytes = mean(size))
avg_bytes <- summarize(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
main()
library(dplyr)
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by (cran, package)
by_package
summarize(mean(size))
summarize(by_package, mean(size))
submit()
?n
tbl
x
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
?arrange
?arrange
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
?chain
submit
submit()
source('~/.active-rstudio-document', echo=TRUE)
x
w
swirl()
source('~/.active-rstudio-document', echo=TRUE)
x
print
source('~/.active-rstudio-document', echo=TRUE)
reset()
source('~/.active-rstudio-document', echo=TRUE)
submit()
reset()
submit()
cran %>%
select(ip_id, country, package, size) %>%
print
submit()
reset()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
skip()
submit()
submit()
skip()
submit()
submit()
skip()
submit()
skip()
swirl()
library(swirl)
swilr
swirl()
libaray(dplyr)
library(dplyr)
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by (cran, package)
by_package
summarize(mean(size))
summarize(by_package, mean(size))
submit()
reset()
submit()
submit()
submit()
reset()
submit()
submit()
skip()
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
library(swirl)
swirl()
pack_sum
main()
libaray(dplyr)
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group.by(cran,package)
by_package <- group_by(cran,package)
by_package
summarize(by_package, mean(size))
submit()
?n
?n_distinct
submit()
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = (mean(size)))
submit()
submit()
reset()
submit
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum,count>679)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts,20)
arrange(top_counts, package, desc(count))
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum, unique> 465 )
filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
gather(student, sex_class, count)
gather(student2, sex_class, count)
gather(students2, sex_class, count)
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
separate()
?separate
separate(data = res, col = sex_class, into= c("sex", "class"))
submit()
student3
students3
submit()
submit()
submit()
submit()
?spread
submit()
extract_numeric("class5")
submit()
student4
students4
submit()
submit()
submit()
submit()
passed
failed
?mutate()
?mutate
?mutate
mutate(states, x)
x
y
3
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?rbind_list
x
fdafd>- y
x
rbind_list(passed, failed)
sat
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(thisday)
wday(1)
wday(this_day)
labe = TRUE
wday(this_day, label = TRUE)
now()
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
Type my_date <- ymd("1989-05-17")
Type my_date <- ymd("1989-05-17")
my_date <- Type my_date <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd(192012)
ymd("192012")
ymd(1920/12)
ymd(1920/1/2)
ymd("1920/1/2"")
)
)
x
ymd("1920/1/2"")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms(03:22:14)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(now)
x <- update(now)
x
e
fasdkaf
this_moment <- update()
this_moment <- update(df2)
thismoment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 37, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 38, seconds)
this_moment <- update(this_moment, hours = 10, minutes = 38, seconds = 0)
?update
update(this_moment, hours = 10, minutes = 38, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 41, seconds = 0)
skip()
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
skip()
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 41, seconds = 0)
skip()
library(swirl)
swirl()
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
now(America/New_York)
now("America/New_York")
now("America/New_York")
nyc <- now("America/New_York")
nyc
nyc + days(2)
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34, seconds = 0)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz()
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrivew
arrive
last
last_time <- mdy("June 17, 2008", tz ="Singapore")
last_time
?new_interval
how_long <- new_interval(arrive, lasttime)
how_long <- new_interval(arrive, last_time)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
install.packages("ws.data", contriburl = "http://www.kanecap.com/R", type = "source")
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages("rstudioapi")
rstudioapi::isAvailable("0.99.149")
devtools::install_github("hadley/devtools")
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages("rstudioapi")
rstudioapi::isAvailable("0.99.149")
devtools::install_github("hadley/devtools")
devtools::install_github("hadley/devtools")
?read.table
getwd()
source('~/Desktop/FFAQR/R/numValues.R', echo=TRUE)
source('~/Desktop/FFAQR/R/cleanSubFF.R', echo=TRUE)
source('~/Desktop/FFAQR/R/cleanAll.R', echo=TRUE)
cleanall()
cleanAll()
setwd("~/Desktop/FFAQR")
cleanAll()
help(FFAQR)
View(FFCMAAvgFirmSize10)
View(FFRMWValWgtAnn3)
ggplot2
library(ggplot2)
View(AQRQMJFactorsMonthly)
View(AQRHMLMonthly)
View(AQRHMLMonthly)
View(FFRMWValWgtMthly10)
View(FFHMLNumOfFirms10)
View(FFCMAEqWgtAnn3)
View(FFCMAAvgFirmSize5)
View(FFCMAAvgFirmSize10)
View(FFCMAEqWgtAnn3)
View(AQRRF)
qplot(AQRHMLMonthly$Date, AQRHMLMonthly$USA, geom="line", data=AQRHMLMonthly)
setwd("~/Desktop/FFAQR")
qplot(AQRHMLMonthly$Date, AQRHMLMonthly$USA, geom="line", data=AQRHMLMonthly)
"./"
"./Rplot1"
fp <- "./Rplot1.png"
fp
?file.path
df <- file.path(getwd(),Rplot1.png)
df <- file.path(getwd(),Rplot)
df <- file.path(getwd(),Rplot1.png)
df <- file.path(getwd(), "Rplot1.png")
df
---
## Example 1
/includegraphics[width = 250pt]{"/Users/MacBook/Desktop/FFAQR/Rplot1.png"}
---
## Example 1
/includegraphics[width = 250pt]{/Users/MacBook/Desktop/FFAQR/Rplot1.png}
---
## Example 1
![My caption](/Users/MacBook/Desktop/FFAQR/Rplot1.png)
